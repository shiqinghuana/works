<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.territory.worksdaos.mapper.ApprovalPersonnelMapper">
  <resultMap id="BaseResultMap" type="com.territory.worksdaos.entity.ApprovalPersonnel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="conditions" jdbcType="VARCHAR" property="conditions" />
    <result column="approval_node" jdbcType="VARCHAR" property="approvalNode" />
    <result column="approval_personnel" jdbcType="VARCHAR" property="approvalPersonnel" />
    <result column="mark" jdbcType="VARCHAR" property="mark" />
    <result column="delete" jdbcType="INTEGER" property="delete" />
    <result column="updata_time" jdbcType="TIMESTAMP" property="updataTime" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="column_12" jdbcType="INTEGER" property="column12" />
    <result column="column_11" jdbcType="INTEGER" property="column11" />
    <result column="column_10" jdbcType="INTEGER" property="column10" />
    <result column="column_9" jdbcType="INTEGER" property="column9" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `type`, conditions, approval_node, approval_personnel, mark, `delete`, updata_time, 
    insert_time, column_12, column_11, column_10, column_9
  </sql>
  <select id="selectByExample" parameterType="com.territory.worksdaos.entity.ApprovalPersonnelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from works_approval_personnel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from works_approval_personnel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from works_approval_personnel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.territory.worksdaos.entity.ApprovalPersonnelExample">
    delete from works_approval_personnel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.territory.worksdaos.entity.ApprovalPersonnel">
    insert into works_approval_personnel (id, `type`, conditions, 
      approval_node, approval_personnel, mark, 
      `delete`, updata_time, insert_time, 
      column_12, column_11, column_10, 
      column_9)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{conditions,jdbcType=VARCHAR}, 
      #{approvalNode,jdbcType=VARCHAR}, #{approvalPersonnel,jdbcType=VARCHAR}, #{mark,jdbcType=VARCHAR}, 
      #{delete,jdbcType=INTEGER}, #{updataTime,jdbcType=TIMESTAMP}, #{insertTime,jdbcType=TIMESTAMP}, 
      #{column12,jdbcType=INTEGER}, #{column11,jdbcType=INTEGER}, #{column10,jdbcType=INTEGER}, 
      #{column9,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.territory.worksdaos.entity.ApprovalPersonnel">
    insert into works_approval_personnel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="conditions != null">
        conditions,
      </if>
      <if test="approvalNode != null">
        approval_node,
      </if>
      <if test="approvalPersonnel != null">
        approval_personnel,
      </if>
      <if test="mark != null">
        mark,
      </if>
      <if test="delete != null">
        `delete`,
      </if>
      <if test="updataTime != null">
        updata_time,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="column12 != null">
        column_12,
      </if>
      <if test="column11 != null">
        column_11,
      </if>
      <if test="column10 != null">
        column_10,
      </if>
      <if test="column9 != null">
        column_9,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="conditions != null">
        #{conditions,jdbcType=VARCHAR},
      </if>
      <if test="approvalNode != null">
        #{approvalNode,jdbcType=VARCHAR},
      </if>
      <if test="approvalPersonnel != null">
        #{approvalPersonnel,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=VARCHAR},
      </if>
      <if test="delete != null">
        #{delete,jdbcType=INTEGER},
      </if>
      <if test="updataTime != null">
        #{updataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="column12 != null">
        #{column12,jdbcType=INTEGER},
      </if>
      <if test="column11 != null">
        #{column11,jdbcType=INTEGER},
      </if>
      <if test="column10 != null">
        #{column10,jdbcType=INTEGER},
      </if>
      <if test="column9 != null">
        #{column9,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.territory.worksdaos.entity.ApprovalPersonnelExample" resultType="java.lang.Long">
    select count(*) from works_approval_personnel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update works_approval_personnel
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.conditions != null">
        conditions = #{record.conditions,jdbcType=VARCHAR},
      </if>
      <if test="record.approvalNode != null">
        approval_node = #{record.approvalNode,jdbcType=VARCHAR},
      </if>
      <if test="record.approvalPersonnel != null">
        approval_personnel = #{record.approvalPersonnel,jdbcType=VARCHAR},
      </if>
      <if test="record.mark != null">
        mark = #{record.mark,jdbcType=VARCHAR},
      </if>
      <if test="record.delete != null">
        `delete` = #{record.delete,jdbcType=INTEGER},
      </if>
      <if test="record.updataTime != null">
        updata_time = #{record.updataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.insertTime != null">
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.column12 != null">
        column_12 = #{record.column12,jdbcType=INTEGER},
      </if>
      <if test="record.column11 != null">
        column_11 = #{record.column11,jdbcType=INTEGER},
      </if>
      <if test="record.column10 != null">
        column_10 = #{record.column10,jdbcType=INTEGER},
      </if>
      <if test="record.column9 != null">
        column_9 = #{record.column9,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update works_approval_personnel
    set id = #{record.id,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=VARCHAR},
      conditions = #{record.conditions,jdbcType=VARCHAR},
      approval_node = #{record.approvalNode,jdbcType=VARCHAR},
      approval_personnel = #{record.approvalPersonnel,jdbcType=VARCHAR},
      mark = #{record.mark,jdbcType=VARCHAR},
      `delete` = #{record.delete,jdbcType=INTEGER},
      updata_time = #{record.updataTime,jdbcType=TIMESTAMP},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      column_12 = #{record.column12,jdbcType=INTEGER},
      column_11 = #{record.column11,jdbcType=INTEGER},
      column_10 = #{record.column10,jdbcType=INTEGER},
      column_9 = #{record.column9,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.territory.worksdaos.entity.ApprovalPersonnel">
    update works_approval_personnel
    <set>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="conditions != null">
        conditions = #{conditions,jdbcType=VARCHAR},
      </if>
      <if test="approvalNode != null">
        approval_node = #{approvalNode,jdbcType=VARCHAR},
      </if>
      <if test="approvalPersonnel != null">
        approval_personnel = #{approvalPersonnel,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        mark = #{mark,jdbcType=VARCHAR},
      </if>
      <if test="delete != null">
        `delete` = #{delete,jdbcType=INTEGER},
      </if>
      <if test="updataTime != null">
        updata_time = #{updataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="column12 != null">
        column_12 = #{column12,jdbcType=INTEGER},
      </if>
      <if test="column11 != null">
        column_11 = #{column11,jdbcType=INTEGER},
      </if>
      <if test="column10 != null">
        column_10 = #{column10,jdbcType=INTEGER},
      </if>
      <if test="column9 != null">
        column_9 = #{column9,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.territory.worksdaos.entity.ApprovalPersonnel">
    update works_approval_personnel
    set `type` = #{type,jdbcType=VARCHAR},
      conditions = #{conditions,jdbcType=VARCHAR},
      approval_node = #{approvalNode,jdbcType=VARCHAR},
      approval_personnel = #{approvalPersonnel,jdbcType=VARCHAR},
      mark = #{mark,jdbcType=VARCHAR},
      `delete` = #{delete,jdbcType=INTEGER},
      updata_time = #{updataTime,jdbcType=TIMESTAMP},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      column_12 = #{column12,jdbcType=INTEGER},
      column_11 = #{column11,jdbcType=INTEGER},
      column_10 = #{column10,jdbcType=INTEGER},
      column_9 = #{column9,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>