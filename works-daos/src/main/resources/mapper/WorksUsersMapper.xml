<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.territory.worksdaos.mapper.WorksUsersMapper">
  <resultMap id="BaseResultMap" type="com.territory.client.entity.WorksUsers">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="delete" jdbcType="INTEGER" property="delete" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="updata_time" jdbcType="TIMESTAMP" property="updataTime" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="column_12" jdbcType="INTEGER" property="column12" />
    <result column="column_11" jdbcType="INTEGER" property="column11" />
    <result column="column_10" jdbcType="INTEGER" property="column10" />
    <result column="column_9" jdbcType="INTEGER" property="column9" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_name, `password`, `delete`, role_id, `state`, nick_name, sex, phone, id_card, 
    address, updata_time, insert_time, column_12, column_11, column_10, column_9
  </sql>
  <select id="selectByExample" parameterType="com.territory.client.entity.WorksUsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from works_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from works_users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from works_users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.territory.client.entity.WorksUsersExample">
    delete from works_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.territory.client.entity.WorksUsers">
    insert into works_users (id, user_name, `password`, 
      `delete`, role_id, `state`, 
      nick_name, sex, phone, 
      id_card, address, updata_time, 
      insert_time, column_12, column_11, 
      column_10, column_9)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{delete,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{nickName,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{idCard,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{updataTime,jdbcType=TIMESTAMP}, 
      #{insertTime,jdbcType=TIMESTAMP}, #{column12,jdbcType=INTEGER}, #{column11,jdbcType=INTEGER}, 
      #{column10,jdbcType=INTEGER}, #{column9,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.territory.client.entity.WorksUsers">
    insert into works_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="delete != null">
        `delete`,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="updataTime != null">
        updata_time,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="column12 != null">
        column_12,
      </if>
      <if test="column11 != null">
        column_11,
      </if>
      <if test="column10 != null">
        column_10,
      </if>
      <if test="column9 != null">
        column_9,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="delete != null">
        #{delete,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="updataTime != null">
        #{updataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="column12 != null">
        #{column12,jdbcType=INTEGER},
      </if>
      <if test="column11 != null">
        #{column11,jdbcType=INTEGER},
      </if>
      <if test="column10 != null">
        #{column10,jdbcType=INTEGER},
      </if>
      <if test="column9 != null">
        #{column9,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.territory.client.entity.WorksUsersExample" resultType="java.lang.Long">
    select count(*) from works_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update works_users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.delete != null">
        `delete` = #{record.delete,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.updataTime != null">
        updata_time = #{record.updataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.insertTime != null">
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.column12 != null">
        column_12 = #{record.column12,jdbcType=INTEGER},
      </if>
      <if test="record.column11 != null">
        column_11 = #{record.column11,jdbcType=INTEGER},
      </if>
      <if test="record.column10 != null">
        column_10 = #{record.column10,jdbcType=INTEGER},
      </if>
      <if test="record.column9 != null">
        column_9 = #{record.column9,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update works_users
    set id = #{record.id,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      `delete` = #{record.delete,jdbcType=INTEGER},
      role_id = #{record.roleId,jdbcType=VARCHAR},
      `state` = #{record.state,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      updata_time = #{record.updataTime,jdbcType=TIMESTAMP},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      column_12 = #{record.column12,jdbcType=INTEGER},
      column_11 = #{record.column11,jdbcType=INTEGER},
      column_10 = #{record.column10,jdbcType=INTEGER},
      column_9 = #{record.column9,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.territory.client.entity.WorksUsers">
    update works_users
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="delete != null">
        `delete` = #{delete,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="updataTime != null">
        updata_time = #{updataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="column12 != null">
        column_12 = #{column12,jdbcType=INTEGER},
      </if>
      <if test="column11 != null">
        column_11 = #{column11,jdbcType=INTEGER},
      </if>
      <if test="column10 != null">
        column_10 = #{column10,jdbcType=INTEGER},
      </if>
      <if test="column9 != null">
        column_9 = #{column9,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.territory.client.entity.WorksUsers">
    update works_users
    set user_name = #{userName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `delete` = #{delete,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=INTEGER},
      nick_name = #{nickName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      updata_time = #{updataTime,jdbcType=TIMESTAMP},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      column_12 = #{column12,jdbcType=INTEGER},
      column_11 = #{column11,jdbcType=INTEGER},
      column_10 = #{column10,jdbcType=INTEGER},
      column_9 = #{column9,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>